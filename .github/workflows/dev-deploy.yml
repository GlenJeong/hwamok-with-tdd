# develop에 push가되는 상황은
# 배포라고 간주

env:
  DB_PASSWORD: root

#action 이름
name: dev-deploy

#action trigger develop, prod를 제외한 나머지 브랜치에 대해서 푸시되면 동작하도록 한다.
on:
  push:
    #대상 브랜치
    branches: [ develop ]

#실행단위 - 메소드같은 애
jobs:
  #job이름
  dev-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      # 각종 변수들 세팅
      - name: set env
        id: set-envs
        run: |
          if [ $GITHUB_REF_NAME = 'develop' ]; then
            PROFILE=dev
          else
            PROFILE=dev
          fi
          
          HWAMOK_ZIP=hwamok-$PROFILE-$(date +'%Y%m%dT%H%M%S%Z')
          
          echo "HWAMOK_ZIP : $HWAMOK_ZIP"
          echo "PROFILE: $PROFILE"
          
          echo "::set-output name=PROFILE::$(echo $PROFILE)"
          echo "::set-output name=HWAMOK_ZIP::$(echo $HWAMOK_ZIP)"

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # ubuntu에 기본으로 깔려있는 mysql 시작
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE hwamoktest;' -uroot -proot

      # jdk 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # gradle test 실행
      - name: Integration Test
        uses: gradle/gradle-build-action@main
        with:
          gradle-version: wrapper
          arguments: zip

      # Elastic Beanstalk으로 배포를 할 예정
      # EB는 PaaS => Platform as a Service => 관리를 안해도 된다.
      # .zip 이안에는 .ebextentions(optional) Procfile .platform 우리의 jar파일

      #.ebextentions(optional) -> eb의 초기 설정 값
      # Server Timezone -> 전세계공통시간 UTC(default) -> 한국시간 KST(UTC+9) 00자정 -> 15시
      # 00-{이름}.config --> 01-{이름}.config

      # procfiles/Procfile -> 실제로 저희 jar파일 실행하는 명령어가 들어가는 곳

      #.platform/nginx/conf.d -> nginx서버 설정
      # java -jar {name}.jar
      # SaaS => Service as a Service

      # s3로 zip파일 업로드
      # aws cli 명령어를 통해서 s3에 올린
      # zip파일을 eb환경으로 업데이트

      - name: move zip
        run: |
          mv build/distributions/hwamok.zip build/distributions/${{ steps.set-envs.outputs.HWAMOK_ZIP }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: upload to s3
        run: |
          aws s3 cp build/distributions/${{ steps.set-envs.outputs.HWAMOK_ZIP }} s3://elasticbeanstalk-ap-northeast-2-897907197066

      - name: Api Deploy To Dev Server
        if: steps.set-envs.outputs.PROFILE == 'dev'
        run: |
          aws elasticbeanstalk create-application-version --application-name dev-hwamok \
              --version-label ${{ steps.set-envs.outputs.HWAMOK_ZIP }} --source-bundle S3Bucket="elasticbeanstalk-ap-northeast-2-897907197066",S3Key="${{ steps.set-envs.outputs.HWAMOK_ZIP }}" \
              --region=ap-northeast-2

          aws elasticbeanstalk update-environment --application-name dev-hwamok \
              --environment-name dev-hwamok-env --version-label ${{ steps.set-envs.outputs.HWAMOK_ZIP }}

      # 이 GitHub Actions 워크플로우는 develop 브랜치에 변경 사항이 푸시될 때 실행됩니다. 주요 단계와 해당 기능을 설명하겠습니다:
      #
      #환경 변수 설정:
      #
      #if [ $GITHUB_REF_NAME = 'develop' ]를 사용하여 브랜치 이름이 'develop'인 경우에만 실행됩니다.
      #PROFILE을 'dev'로 설정하고, HWAMOK_ZIP을 현재 날짜 및 시간을 기반으로 한 값으로 설정합니다.
      #echo "::set-output name=PROFILE::$(echo $PROFILE)" 및 echo "::set-output name=HWAMOK_ZIP::$(echo $HWAMOK_ZIP)"를 사용하여 출력 변수를 설정합니다.
      #MySQL 설정:
      #
      #MySQL을 시작하고 'hwamoktest'라는 데이터베이스를 생성합니다.
      #JDK 및 Gradle 설정:
      #
      #JDK 17 및 Gradle을 설정합니다.
      #Gradle 빌드:
      #
      #Gradle을 사용하여 프로젝트를 빌드하고, zip 작업을 실행하여 애플리케이션을 압축합니다.
      #ZIP 파일 이동:
      #
      #빌드된 ZIP 파일을 적절한 디렉토리로 이동시킵니다.
      #AWS 자격 증명 구성:
      #
      #AWS 자격 증명을 구성하기 위해 GitHub Actions에서 제공하는 aws-actions/configure-aws-credentials 액션을 사용합니다.
      #GitHub Secrets에서 제공한 AWS 액세스 키, 시크릿 키, 및 리전을 사용하여 AWS 자격 증명을 설정합니다.
      #S3로 업로드:
      #
      #빌드된 ZIP 파일을 AWS S3로 업로드합니다.
      #S3 버킷 이름과 업로드 경로는 하드 코딩되어 있습니다.
      #Elastic Beanstalk 배포:
      #
      #개발 프로필일 때만 실행됩니다.
      #Elastic Beanstalk 애플리케이션 버전을 생성하고 해당 버전을 사용하여 Elastic Beanstalk 환경을 업데이트합니다.
      #이 워크플로우는 GitHub Actions를 사용하여 애플리케이션을 빌드하고 AWS Elastic Beanstalk로 배포하는 프로세스를 자동화합니다. 코드가 'develop' 브랜치에 푸시될 때마다 이 작업이 수행됩니다.